/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.sql.Statement;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

import koneksi.koneksi;

/**
 *
 * @author Administrator
 */
public final class main extends javax.swing.JFrame {

    /**
     * Creates new form java
     */
    private Connection conn;

    public main() {
        initComponents();
        conn = koneksi.Koneksi();

        tampilData();
        nonAktifBtn();        

        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().width / 2;
        this.setLocation(x, y);

        addTanggal();

        jenisKendaraan.setEnabled(false);
        hargaSupir.setEnabled(false);
        hargaSewa.setEnabled(false);
        totalBayar.setEnabled(false);
        kembalian.setEnabled(false);
    }

    public void tampilData() {
        DefaultTableModel model = (DefaultTableModel) tabelRental.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT * FROM penyewaan";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                String tanggalV = rs.getString("tanggal");
                String noTransaksiV = rs.getString("no_transaksi");
                String noPolisiV = rs.getString("no_polisi");
                String jenisKendaraanV = rs.getString("jenis_kendaraan");
                String supirV = rs.getString("supir");
                String hargaSupirV = rs.getString("harga_supir");
                String lamaSewaV = rs.getString("lama_sewa");
                String uangBayarV = rs.getString("uang_bayar");
                String totalBayarV = rs.getString("total_bayar");
                String kembalianV = rs.getString("kembalian");

                Object[] rowData = {tanggalV, noTransaksiV, noPolisiV, jenisKendaraanV, supirV, hargaSupirV, lamaSewaV,
                    totalBayarV, uangBayarV, kembalianV};
                model.addRow(rowData);
            }

            rs.close();
            st.close();

        } catch (Exception e) {
            // TODO: handle exception
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    public void addTanggal() {
        Date tgl = new Date();
        SimpleDateFormat aa = new SimpleDateFormat("yyyy-MM-dd");
        tanggal.setText(aa.format(tgl));
    }

    public void maxChar(KeyEvent a) {
        if (noTransaksi.getText().length() == 6) {
            a.consume();
            JOptionPane.showMessageDialog(null,
                    "Maksimal 6 Karakter",
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void resetInput() {
        noPolisi.setSelectedItem("");
        pilihSupir.setSelectedItem("");
        jenisKendaraan.setText("");
        hargaSupir.setText("");
        lamaSewa.setText("");
        hargaSewa.setText("");
        uangBayar.setText("");
        totalBayar.setText("");
        kembalian.setText("");
    }

    private void nonAktifBtn() {
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    private void aktifButton() {
        btnSimpan.setEnabled(true);
        btnBatal.setEnabled(true);
    }

    private boolean checkDuplicateTransactionNumber(String noTransaksi) {
        boolean isDuplicate = false;
        try {
            String query = "SELECT COUNT(*) AS count FROM penyewaan WHERE no_transaksi = ?";
            PreparedStatement st = conn.prepareStatement(query);
            st.setString(1, noTransaksi);
            ResultSet rs = st.executeQuery();

            if (rs.next()) {
                int count = rs.getInt("count");
                if (count > 0) {
                    isDuplicate = true;
                }
            }
            rs.close();
            st.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return isDuplicate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        noTransaksi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tanggal = new javax.swing.JTextField();
        noPolisi = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jenisKendaraan = new javax.swing.JTextField();
        hargaSewa = new javax.swing.JTextField();
        lamaSewa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        hargaSupir = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        totalBayar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        uangBayar = new javax.swing.JTextField();
        kembalian = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnBaru = new javax.swing.JButton();
        btnHitung = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelRental = new javax.swing.JTable();
        pilihSupir = new javax.swing.JComboBox<>();
        btnBatal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("RENTAL MOBIL");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(236, 236, 236))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jLabel2.setText("No.Trantaksi :");

        jLabel3.setText("No.Polisi :");

        noTransaksi.setEnabled(false);
        noTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                noTransaksiMouseExited(evt);
            }
        });
        noTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noTransaksiActionPerformed(evt);
            }
        });
        noTransaksi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                noTransaksiKeyTyped(evt);
            }
        });

        jLabel4.setText("Tanggal :");

        tanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanggalActionPerformed(evt);
            }
        });
        tanggal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tanggalKeyTyped(evt);
            }
        });

        noPolisi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "B 1234 XYZ", "D 5678 ABC", "L 9012 DEF", "F 3456 GHI", "H 7890 JKL" }));
        noPolisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noPolisiActionPerformed(evt);
            }
        });

        jLabel5.setText("Jenis Kendaraan :");

        jLabel6.setText("Harga Sewa / Hari :");

        jLabel7.setText("Lama Sewa :");

        jenisKendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenisKendaraanActionPerformed(evt);
            }
        });

        hargaSewa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaSewaActionPerformed(evt);
            }
        });

        lamaSewa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lamaSewaActionPerformed(evt);
            }
        });

        jLabel8.setText("Pilih Supir :");

        jLabel9.setText("Harga Supir :");

        hargaSupir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaSupirActionPerformed(evt);
            }
        });

        jLabel10.setText("Total Bayar :");

        totalBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalBayarActionPerformed(evt);
            }
        });

        jLabel11.setText("Uang Bayar :");

        uangBayar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                uangBayarFocusLost(evt);
            }
        });
        uangBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uangBayarActionPerformed(evt);
            }
        });

        kembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembalianActionPerformed(evt);
            }
        });

        jLabel12.setText("kembalian :");

        btnBaru.setText("BARU");
        btnBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruActionPerformed(evt);
            }
        });

        btnHitung.setText("HITUNG");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });

        btnKeluar.setText("KELUAR");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tabelRental.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tanggal", "No Transaksi", "No Polisi", "Jenis Kendaraan", "Supir", "Harga Supir", "Lama Sewa", "Total Bayar", "Uang Sewa", "Kembalian"
            }
        ));
        tabelRental.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelRentalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelRental);

        pilihSupir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "Supir", "No Supir" }));
        pilihSupir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilihSupirActionPerformed(evt);
            }
        });

        btnBatal.setText("BATAL");
        btnBatal.setToolTipText("");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(noTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(noPolisi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jenisKendaraan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hargaSewa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lamaSewa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pilihSupir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(hargaSupir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(totalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(18, 18, 18)
                                    .addComponent(uangBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(23, 23, 23)
                                .addComponent(kembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBaru)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHitung)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKeluar)
                        .addGap(43, 43, 43)
                        .addComponent(btnBatal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(noTransaksi)
                        .addComponent(tanggal)
                        .addComponent(jLabel4))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(hargaSewa)
                                    .addComponent(lamaSewa)))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(noPolisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jenisKendaraan))))
                        .addGap(37, 37, 37)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pilihSupir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hargaSupir)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uangBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBaru)
                    .addComponent(btnHitung)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnKeluar)
                        .addComponent(btnBatal))
                    .addComponent(btnSimpan)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void noTransaksiMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_noTransaksiMouseExited

    }// GEN-LAST:event_noTransaksiMouseExited

    private void noTransaksiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_noTransaksiActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_noTransaksiActionPerformed

    private void tanggalActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tanggalActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_tanggalActionPerformed

    private void jenisKendaraanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jenisKendaraanActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jenisKendaraanActionPerformed

    private void hargaSewaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_hargaSewaActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_hargaSewaActionPerformed

    private void lamaSewaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_lamaSewaActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_lamaSewaActionPerformed

    private void hargaSupirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_hargaSupirActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_hargaSupirActionPerformed

    private void totalBayarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_totalBayarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_totalBayarActionPerformed

    private void uangBayarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_uangBayarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_uangBayarActionPerformed

    private void kembalianActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_kembalianActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_kembalianActionPerformed

    private void btnBaruActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBaruActionPerformed
        // TODO add your handling code here:
        noTransaksi.setText("");
        jenisKendaraan.setText("");
        noPolisi.setSelectedIndex(0);
        hargaSewa.setText("");
        lamaSewa.setText("");
        pilihSupir.setSelectedIndex(0);
        hargaSupir.setText("");
        totalBayar.setText("");
        uangBayar.setText("");
        kembalian.setText("");
    }// GEN-LAST:event_btnBaruActionPerformed

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHitungActionPerformed
        // TODO add your handling code here:
        int hargaSewaMobil = Integer.parseInt(hargaSewa.getText());
        int lamaSewaMobil = Integer.parseInt(lamaSewa.getText());
        int biayaSupirMobil = Integer.parseInt(hargaSupir.getText());
        int totalBayarMobil;

        totalBayarMobil = ((hargaSewaMobil * lamaSewaMobil) + biayaSupirMobil);
        totalBayar.setText(Integer.toString(totalBayarMobil));
    }// GEN-LAST:event_btnHitungActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null,
                "Apakah Yakin Akan Keluar ?",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }// GEN-LAST:event_btnKeluarActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String tanggalT = tanggal.getText();
        String noTransaksiT = noTransaksi.getText();
        String noPolisiT = (String) noPolisi.getSelectedItem();
        String jenisKendaraanT = jenisKendaraan.getText();
        String supirT = (String) pilihSupir.getSelectedItem();
        String hargaSupirT = hargaSupir.getText();
        String lamaSewaT = lamaSewa.getText();
        String uangBayarT = uangBayar.getText();
        String totalBayarT = totalBayar.getText();
        String kembalianT = kembalian.getText();

        if (tanggalT.isEmpty() || noPolisiT.isEmpty() || jenisKendaraanT.isEmpty()
                || hargaSupirT.isEmpty() || lamaSewaT.isEmpty() || uangBayarT.isEmpty() || totalBayarT.isEmpty() || kembalianT.isEmpty() || supirT.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolum Harus DiIsi !", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String noTransaksiV = noTransaksiT;
        if (checkDuplicateTransactionNumber(noTransaksiV)) {
            JOptionPane.showMessageDialog(this, "Duplicate transaction number!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String sql = "INSERT INTO penyewaan (tanggal, no_polisi, jenis_kendaraan, supir, harga_supir, lama_sewa, uang_bayar, total_bayar, kembalian) VALUES (?,?,?,?,?,?,?,?,?)";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, tanggalT);
            st.setString(2, noPolisiT);
            st.setString(3, jenisKendaraanT);
            st.setString(4, supirT);
            st.setString(5, hargaSupirT);
            st.setString(6, lamaSewaT);
            st.setString(7, uangBayarT);
            st.setString(8, totalBayarT);
            st.setString(9, kembalianT);

            int rowInserted = st.executeUpdate();
            if (rowInserted > 0) {
                JOptionPane.showMessageDialog(this, "Data Berhasil Di Tambahkan");
                resetInput();
                tampilData();
            }

            st.close();
        } catch (Exception e) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, e);
        }
    }// GEN-LAST:event_btnSimpanActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelRental.getSelectedRow();

        String tanggalU = tanggal.getText();
        String noTransaksiU = noTransaksi.getText();
        String noPolisiU = (String) noPolisi.getSelectedItem();
        String jenisKendaraanU = jenisKendaraan.getText();
        String supirU = (String) pilihSupir.getSelectedItem();
        String hargaSupirU = hargaSupir.getText();
        String lamaSewaU = lamaSewa.getText();
        String totalBayarU = totalBayar.getText();
        String uangBayarU = uangBayar.getText();
        String kembalianU = kembalian.getText();

        try {
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Di Perbarui!");
                return;
            }

            String originalNoTransaksi = tabelRental.getValueAt(selectedRow, 1).toString();

            if (tanggalU.isEmpty() || noTransaksiU.isEmpty() || noPolisiU.isEmpty() || jenisKendaraanU.isEmpty()
                    || hargaSupirU.isEmpty() || lamaSewaU.isEmpty() || uangBayarU.isEmpty() || supirU.isEmpty() || totalBayarU.isEmpty() || kembalianU.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua Kolum Harus DiIsi !", "Validasi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String checkQuery = "SELECT COUNT(*) AS count FROM penyewaan WHERE no_transaksi = ? AND no_transaksi != ?";
            try (PreparedStatement checkSt = conn.prepareStatement(checkQuery)) {
                checkSt.setString(1, noTransaksiU);
                checkSt.setString(2, originalNoTransaksi);
                ResultSet rs = checkSt.executeQuery();

                if (rs.next() && rs.getInt("count") > 0) {
                    JOptionPane.showMessageDialog(this, "No Transaksi Sudah Ada!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            String sql = "UPDATE penyewaan SET tanggal=?, no_transaksi=?, no_polisi=?, jenis_kendaraan=?, supir=?, harga_supir=?, lama_sewa=?, uang_bayar=?, total_bayar=?, kembalian=? WHERE no_transaksi=?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, tanggalU);
                st.setString(2, noTransaksiU);
                st.setString(3, noPolisiU);
                st.setString(4, jenisKendaraanU);
                st.setString(5, supirU);
                st.setString(6, hargaSupirU);
                st.setString(7, lamaSewaU);
                st.setString(8, uangBayarU);
                st.setString(9, totalBayarU);
                st.setString(10, kembalianU);
                st.setString(11, originalNoTransaksi);

                int rowUpdated = st.executeUpdate();
                if (rowUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil DiPerbarui!");
                    resetInput();
                    tampilData();
                } else {
                    JOptionPane.showMessageDialog(this, "Data Tidak Berhasil DiPerbarui!");
                }
            }
        } catch (HeadlessException | SQLException e) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, e);
        }
    }// GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelRental.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Di Perbarui!");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Ingin Menghapus Data Ini?", "Konfirmasi",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            String noTransaksi = tabelRental.getValueAt(selectedRow, 1).toString();
            try {
                String sql = "DELETE FROM penyewaan WHERE no_transaksi=?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, noTransaksi);

                int rowDelete = st.executeUpdate();
                if (rowDelete > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Di Hapus!");
                }

                st.close();
            } catch (Exception e) {
                // TODO: handle exception
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, e);
            }
        }

        resetInput();
        tampilData();
        aktifButton();
        nonAktifBtn();

    }// GEN-LAST:event_btnDeleteActionPerformed

    private void noTransaksiKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_noTransaksiKeyTyped
        // TODO add your handling code here:
        maxChar(evt);
    }// GEN-LAST:event_noTransaksiKeyTyped

    private void tanggalKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tanggalKeyTyped
        // TODO add your handling code here:
        tanggal.setEditable(false);
    }// GEN-LAST:event_tanggalKeyTyped

    private void noPolisiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_noPolisiActionPerformed
        // TODO add your handling code here:
        String nomorPolisi = noPolisi.getSelectedItem().toString();
        switch (nomorPolisi) {
            case "B 1234 XYZ" -> {
                jenisKendaraan.setText("BMW");
                hargaSewa.setText("4000000");
            }
            case "D 5678 ABC" -> {
                jenisKendaraan.setText("Mercedes - Benz");
                hargaSewa.setText("1500000");
            }
            case "L 9012 DEF" -> {
                jenisKendaraan.setText("Ford");
                hargaSewa.setText("800000");
            }
            case "F 3456 GHI" -> {
                jenisKendaraan.setText("Honda");
                hargaSewa.setText("600000");
            }
            case "H 7890 JKL" -> {
                jenisKendaraan.setText("Toyota");
                hargaSewa.setText("500000");
            }
        }
    }// GEN-LAST:event_noPolisiActionPerformed

    private void pilihSupirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pilihSupirActionPerformed
        // TODO add your handling code here:
        String supir = pilihSupir.getSelectedItem().toString();
        switch (supir) {
            case "Supir" ->
                hargaSupir.setText("150000");
            case "No Supir" ->
                hargaSupir.setText("0");
        }
    }// GEN-LAST:event_pilihSupirActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        resetInput();
        aktifButton();
        nonAktifBtn();
        btnDelete.setEnabled(true);
    }// GEN-LAST:event_refreshActionPerformed

    private void tabelRentalMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tabelRentalMouseClicked
        // TODO add your handling code here:
        int selectedRow = tabelRental.getSelectedRow();
        if (selectedRow != -1) {
            String tanggalC = tabelRental.getValueAt(selectedRow, 0).toString();
            String noTransaksiC = tabelRental.getValueAt(selectedRow, 1).toString();
            String noPolisiC = tabelRental.getValueAt(selectedRow, 2).toString();
            String jenisKendaraanC = tabelRental.getValueAt(selectedRow, 3).toString();
            String supirC = tabelRental.getValueAt(selectedRow, 4).toString();
            String hargaSupirC = tabelRental.getValueAt(selectedRow, 5).toString();
            String lamaSewaC = tabelRental.getValueAt(selectedRow, 6).toString();
            String totalBayarC = tabelRental.getValueAt(selectedRow, 7).toString();
            String hargaSewaC = tabelRental.getValueAt(selectedRow, 8).toString();
            String kembalianC = tabelRental.getValueAt(selectedRow, 9).toString();

            tanggal.setText(tanggalC);
            noTransaksi.setText(noTransaksiC);
            noPolisi.setSelectedItem(noPolisiC);
            jenisKendaraan.setText(jenisKendaraanC);
            pilihSupir.setSelectedItem(supirC);
            hargaSupir.setText(hargaSupirC);
            lamaSewa.setText(lamaSewaC);
            totalBayar.setText(totalBayarC);
            uangBayar.setText(hargaSewaC);
            kembalian.setText(kembalianC);
        }

        btnUpdate.setEnabled(true);
        btnSimpan.setEnabled(false);
        btnDelete.setEnabled(true);
    }// GEN-LAST:event_tabelRentalMouseClicked

    private void uangBayarFocusLost(java.awt.event.FocusEvent evt) {
        int cekTotal = 0;
        int cekBayar = 0;
        int hitungKembalian = 0;

        try {
            cekTotal = Integer.parseInt(totalBayar.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Total Bayar Harus Berupa Angka", "Peringatan",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (uangBayar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Uang Bayar Tidak Boleh Kosong", "Peringatan",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            cekBayar = Integer.parseInt(uangBayar.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Uang Bayar Harus Berupa Angka", "Peringatan",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (cekBayar < cekTotal) {
            JOptionPane.showMessageDialog(null, "Uang Bayar Kurang Dari Total Bayar!", "Peringatan",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            hitungKembalian = cekBayar - cekTotal;
            kembalian.setText(Integer.toString(hitungKembalian));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException
                | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaru;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHitung;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField hargaSewa;
    private javax.swing.JTextField hargaSupir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jenisKendaraan;
    private javax.swing.JTextField kembalian;
    private javax.swing.JTextField lamaSewa;
    private javax.swing.JComboBox<String> noPolisi;
    private javax.swing.JTextField noTransaksi;
    private javax.swing.JComboBox<String> pilihSupir;
    private javax.swing.JTable tabelRental;
    private javax.swing.JTextField tanggal;
    private javax.swing.JTextField totalBayar;
    private javax.swing.JTextField uangBayar;
    // End of variables declaration//GEN-END:variables
}
